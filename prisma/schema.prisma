// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}

model Post {
    id        Int      @id @default(autoincrement())
    name      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    createdBy   User   @relation(fields: [createdById], references: [id])
    createdById String

    @@index([name])
}

// Necessary for Next auth
model Account {
    id                       String  @id @default(cuid())
    userId                   String
    type                     String
    provider                 String
    providerAccountId        String
    refresh_token            String? // @db.Text
    access_token             String? // @db.Text
    expires_at               Int?
    token_type               String?
    scope                    String?
    id_token                 String? // @db.Text
    session_state            String?
    user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    refresh_token_expires_in Int?

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}


enum Plan {
  TRIAL
  BASIC
  PRO
}

enum MembershipRole {
  OWNER
  MEMBER
}

model Workspace {
  id                    String                  @id @default(cuid())
  name                  String
  isFreeTrial           Boolean                 @default(true)
  plan                  Plan                    @default(TRIAL)
  freeTrialEndsAt       DateTime?               @default(now())
  membership            Membership[]
}

model Membership {
  id           String         @id @default(cuid())
  role         MembershipRole
  workspace    Workspace      @relation(fields: [workspaceId], references: [id])
  workspaceId  String
  user         User?          @relation(fields: [userId], references: [id])
  userId       String?
  invitedName  String?
  invitedEmail String?
  invitedToken String?
  isActive     Boolean        @default(true)

  @@unique([workspaceId, invitedEmail])
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    posts         Post[]
    membership    Membership[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
